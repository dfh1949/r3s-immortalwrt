name: Build ImmortalWrt for R3S

on:
  schedule:
    # 每周1次定时任务（可根据需要调整）
    - cron: '0 0 * * 0'  # 每周日凌晨12点触发编译
  workflow_dispatch:      # 允许手动触发编译
    inputs: '点击按钮触发编译'
    required: true
    default: 'true'



jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检出仓库
      uses: actions/checkout@v4

    - name: 准备编译环境
      run: |
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
          libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
          ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils \
          python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
          upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd

    - name: 克隆 ImmortalWrt 源码
      run: |
        git clone https://github.com/immortalwrt/immortalwrt.git
        cd immortalwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 恢复diffconfig
      run: |
        cd immortalwrt
        cp -r ../config/diffconfig .config
        make defconfig

    - name: Overwrite kernel config
      run: |
        cd immortalwrt
        # 注意根据你的设备实际修改路径
        cp -r ../config/config-6.6 target/linux/rockchip/armv8/config-6.6

#    - name: Run DIY part 1 (编译前)
#      run: |
#        bash ../sh/diy-part1.sh

    - name: 开始编译
      run: |
        cd immortalwrt
        make clean
        make download -j8 
        make -j$(nproc)

#    - name: Run DIY part 2 (编译后)
#      run: |
#        bash ../sh/diy-part2.sh

    - name: 检查文件
      run: |
        FIRMWARE_PATH="bin/targets/armvirt/64/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r3s-squashfs-sysupgrade.img.gz"
        if [ ! -f "$FIRMWARE_PATH" ]; then
          echo "Firmware file not found!"
          exit 1
        else
          echo "Firmware file found: $FIRMWARE_PATH"
        fi

    - name: 按照时间戳重命名
      run: |
         DATE=$(date +"%Y%m%d%H%M%S")
         FIRMWARE_PATH="bin/targets/armvirt/64/immortalwrt-rockchip-armv8-friendlyarm_nanopi-r3s-squashfs-sysupgrade.img.gz"
         NEW_FIRMWARE_NAME="${DATE}-r3s-squashfs-sysupgrade.img.gz"
         mv "$FIRMWARE_PATH" "bin/targets/armvirt/64/$NEW_FIRMWARE_NAME"
         echo "Renamed firmware to: $NEW_FIRMWARE_NAME"
    
    
    - name: 上传重命名后的固件
      uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: "bin/targets/armvirt/64/${NEW_FIRMWARE_NAME}"
        retention-days: 5
        if-no-files-found: error
